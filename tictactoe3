#!/bin/bash

board_display() {
#pretty board
p_b=("${board[@]}")
a_count=0
#a sequence to change teh color of things to make them more promenent
for i in ${p_b[@]} ; do
	if [[ $i == x ]]; then
	p_b[$a_count]="\e[31m\e[1mX\e[21m\e[39m"
	elif [[ $i == o ]]; then
	p_b[$a_count]="\e[92m\e[1mO\e[21m\e[39m"

	fi
	a_count=$((a_count + 1))
done

echo -e "
	${p_b[0]} | ${p_b[1]} | ${p_b[2]}
	---------
	${p_b[3]} | ${p_b[4]} | ${p_b[5]}
	---------
	${p_b[6]} | ${p_b[7]} | ${p_b[8]}"

}
vic_check() {

a=${board[$1]}

b=${board[$2]}

c=${board[$3]}


if [[ $a == $b && $b == $c ]]; then
	echo "someone has won"
	exit

fi
}



board=(0 1 2 3 4 5 6 7 8)
board_display

echo -n "Single Player or Two Player?

1. Single Player (play against STEVETRON 4000)
2. Two player

"
read gamemode

if [[ $gamemode =~ ^[1-2]$ ]]; then
	if [[ $gamemode == 1 ]]; then
		echo "STEVETRON 4000 IS UNDEAFEATABLE!!!"
	fi
	if [[ $gamemode == 2 ]]; then
		echo "you chose to play against a friend! (or yourself if you have no friends)"
	fi
	
else
	echo "invalid, cant you read?" >&2
	exit 1
fi

while [[ ${board[0]} == 0 || ${board[1]} == 1 || ${board[2]} == 2 || ${board[3]} == 3 || ${board[4]} == 4 ||${board[5]} == 5|| ${board[6]} == 6 || ${board[7]} == 7 || ${board[8]} == 8 ]]; do
	#vic_chekc check victories conditions, in tictac toe there are 8
	vic_check 0 1 2
	vic_check 3 4 5
	vic_check 6 7 8
	vic_check 0 3 6
	vic_check 1 4 7
	vic_check 2 5 8
	vic_check 0 4 8
	vic_check 2 4 6

	source ./ttt_p1
	player1

	board_display
	#is there a way to condense an expression?
	
	if [[ ${board[0]} == 0 || ${board[1]} == 1 || ${board[2]} == 2 || ${board[3]} == 3 || ${board[4]} == 4 ||${board[5]} == 5|| ${board[6]} == 6 || ${board[7]} == 7 || ${board[8]} == 8 ]]; then
		vic_check 0 1 2
		vic_check 3 4 5
		vic_check 6 7 8
		vic_check 0 3 6
		vic_check 1 4 7
		vic_check 2 5 8
		vic_check 0 4 8
		vic_check 2 4 6

		if [[ $gamemode =~ ^[1-2]$ ]]; then
			if [[ $gamemode == 1 ]]; then
				source ./ttt_ai2
				ai2
			fi
			if [[ $gamemode == 2 ]]; then
				source ./ttt_p2
				player2
			fi
	
		else
			echo "invalid, cant you read?" >&2
			exit 1
			fi
		
		

		board_display 
		
	fi
	
done
	echo "the board is filled"

	
	




